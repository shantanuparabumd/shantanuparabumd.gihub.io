{
  "projects": [
    {
      "id": 1,
      "title": "Drone Delivery Simulation",
      "image": "images/project/drone.webp",
      "description": "A drone simulation system for automated parcel delivery with Gazebo and ROS plugins.",
      "tags": ["Gazebo", "ROS", "Blender", "SolidWorks", "Drone Simulation"],
      "github": "https://github.com/shantanuparabumd/drone_delivery",
      "video": "images/videos/drone.mp4",
      "date": "May 2024",
      "longDescription": "This project involves developing a simulated drone delivery system using Gazebo, ROS, SolidWorks, and Blender. The drone, modeled in SolidWorks, is equipped with custom plugins for flight control, odometry publishing, and vacuum gripper functionality for picking up and placing parcels based on detected Aruco markers. The drone's flight is stabilized through a PID controller, while odometry data serves as feedback. The environment and parcels are modeled in Blender, with necessary physics adjustments for realistic simulation. The article provides a step-by-step guide on developing plugins for drone flight, grasping, and controlled delivery of parcels in specified locations.",
      "media": [
        {
          "type": "image",
          "url": "images/project/drone.webp"
        },
        {
          "type": "video",
          "url": "images/videos/drne.mp4"
        },
        {
          "type": "article",
          "image": "images/project/drone.webp",
          "url": "https://medium.com/@shantanuparab99/unleashing-the-power-of-simulation-engines-writing-plugins-for-enhanced-drone-simulations-ab7c847ca432"
        }
      ]
    },

    {
      "id": 2,
      "title": "Quadruped Robot Simulation",
      "image": "images/project/quadruped.png",
      "description": "A Quadruped Robot designed from scratch in SolidWorks and simulated in Gazebo with ROS communication and Python control.",
      "tags": ["ROS", "Gazebo", "SolidWorks", "Inverse Kinematics", "URDF", "Python"],
      "github": "https://github.com/shantanuparabumd/quad_robo",
      "video": "",
      "date": "November 2023",
      "longDescription": "In this project, I designed a Quadruped Robot from the ground up using SolidWorks, converted it to URDF for ROS integration, and simulated it in Gazebo. Key highlights include the detailed design in SolidWorks, URDF conversion for seamless ROS integration, implementation of inverse kinematics using DH parameters and Jacobian methods, and robust ROS communication for controlling the robotâ€™s movements. Additionally, I developed a Python script for interactive control of the robot, making it versatile and user-friendly in the simulation environment. This project showcases my skills in Robot Modelling, Simulation, and ROS, providing valuable experience with Gazebo and Python control systems.",
      "media": [
        {
          "type": "video",
          "url": "images/videos/quadruped.mp4"
        },
        {
          "type": "article",
          "image": "images/project/quadruped.png",
          "url": "https://www.linkedin.com/posts/shantanu-parab_robotics-simulation-rosnoetic-activity-7093805585623572481-FQK-?utm_source=share&utm_medium=member_desktop"
        }
      ]
    },

    {
      "id": 3,
      "title": "Autonomous Robot",
      "image": "images/project/autobot.png",
      "description": "Developed an autonomous vehicle capable of navigating complex obstacle courses and performing object manipulation tasks.",
      "tags": ["ROS2", "C++", "Python", "Perception", "Path Planning", "Raspberry Pi", "YOLO", "MiDAS"],
      "github": "https://github.com/shantanuparabumd/Autonomous-Robot-809T",
      "video": "",
      "date": "May 2023",
      "longDescription": "This project involved designing and constructing an autonomous vehicle that navigates complex environments and performs object manipulation. Using a Raspberry Pi with Ubuntu 20.04 and ROS2 Galactic, the vehicle integrates various sensors and advanced algorithms. Object detection is handled by YOLO, allowing efficient identification of colored objects, while MiDAS provides depth estimation for accurate perception. Localization is achieved through encoders and IMU sensors, with the RRT* algorithm for global path planning and a potential field algorithm for dynamic path planning, ensuring real-time adaptation to moving obstacles. Custom libraries were developed to enable seamless communication between hardware components via UART, SPI, and I2C protocols, resulting in a robust system capable of autonomous navigation and manipulation in dynamic settings.",
      "media": [
        {
          "type": "image",
          "url": "images/project/autobot.png"
        },
        {
          "type": "video",
          "url": "images/videos/autorobot.mp4"
        },
        {
          "type": "video",
          "url": "images/videos/grandchallenge.mp4"
        }
      ]
    },

    {
      "id": 4,
      "title": "ARIAC Project",
      "image": "images/project/ariac.png",
      "description": "Implemented robotics solutions for industrial automation tasks as part of the ARIAC competition.",
      "tags": ["ROS", "Industrial Automation", "Robotics", "Automation"],
      "github": "https://github.com/shantanuparabumd/ariac_2024",
      "video": "",
      "date": "May 2024",
      "longDescription": "As part of the Agile Robotics for Industrial Automation Competition (ARIAC), I developed robotics solutions focused on enhancing industrial automation processes. My work involved creating automated systems to manage complex tasks efficiently, using ROS for modular and scalable development. This project emphasized real-world applications in industrial environments, challenging me to optimize robotic actions for high precision and reliability, which are critical in automation workflows.",
      "media": [
        {
          "type": "image",
          "url": "images/project/ariac.png"
        },
        {
          "type": "video",
          "url": "images/videos/ARIAC.mp4"
        },
        {
          "type": "video",
          "url": "images/videos/ariac.mp4"
        }
      ]
    },

    {
      "id": 5,
      "title": "Autonomous Vehicle Simulation",
      "image": "images/project/autovehicle.png",
      "description": "Developed a ROS2-based autonomous vehicle simulation using Gazebo, equipped with advanced path planning and obstacle avoidance capabilities.",
      "tags": ["ROS2", "Gazebo", "Path Planning", "C++", "Python", "LiDAR", "Computer Vision"],
      "github": "https://github.com/shantanuparabumd/autonomous_vehicle",
      "video": "",
      "date": "March 2024",
      "longDescription": "This project involved developing an autonomous vehicle simulation using a Toyota Prius model in the Gazebo environment, with ROS2 integration for sensor and actuator control. Using sensor fusion from LiDAR and camera data, the simulation enabled accurate obstacle detection and lane recognition. I implemented the RRT* algorithm for efficient global path planning, allowing the vehicle to navigate through static obstacles. For dynamic obstacles, I utilized potential field algorithms to facilitate real-time path adjustments. OpenCV was employed for lane and obstacle identification, enhancing the vehicle's navigation capabilities. In line with Agile practices, this project involved rigorous testing with the Google Test Suite and continuous integration to ensure code robustness.",
      "media": [
        {
          "type": "image",
          "url": "images/project/autovehicle.png"
        },
        {
          "type": "video",
          "url": "images/videos/auto_vehicle.mp4"
        },
        {
          "type": "article",
          "image": "images/project/autovehicle.png",
          "url": "https://www.linkedin.com/posts/shantanu-parab_osrf-autonomousvehicles-ros2-activity-7183615111591325696-FY1u?utm_source=share&utm_medium=member_desktop"
        }
      ]
    },

    {
      "id": 6,
      "title": "3D Vision - Point Cloud Classification and NeRF Modeling",
      "image": "images/project/lego.gif",
      "description": "Explored advanced 3D vision techniques for point cloud classification using PointNet and 3D model generation using NeRF.",
      "tags": ["Python", "PointNet", "NeRF", "3D Vision", "Computer Vision"],
      "github": "https://github.com/shantanuparabumd/assignment3_sparab",
      "video": "",
      "date": "February 2023",
      "longDescription": "This project combined two advanced techniques in 3D vision: Point Cloud Classification using PointNet and 3D Model Generation with Neural Radiance Fields (NeRF). PointNet was employed to classify point clouds into categories like chairs, vases, and lamps, while also segmenting chairs into specific sections. The project analyzed the effects of point cloud density and object rotation on classification accuracy, highlighting significant drops in accuracy with reduced density and extreme rotations. Additionally, the NeRF model was implemented to reconstruct a 3D model of a Lego bulldozer with high detail. By leveraging neural networks to predict radiance and capture intricate geometry, the project demonstrated practical applications of NeRF in generating realistic 3D models. Experiments with different training epochs underscored the impact of model optimization for realistic renderings. This project emphasizes expertise in 3D vision, point cloud analysis, and neural network-based 3D modeling, showcasing proficiency in translating complex theories into effective applications.",
      "media": [
        {
          "type": "article",
          "image": "images/project/pointnet.gif",
          "url": "https://github.com/shantanuparabumd/assignment4_sparab"
        },
        {
          "type": "article",
          "image": "images/project/lego.gif",
          "url": "https://github.com/shantanuparabumd/assignment3_sparab"
        }
      ]
    },    

    {
      "id": 7,
      "title": "Swarm Robotics: Firefly Algorithm",
      "image": "images/project/firefly.png",
      "description": "Implemented a bio-inspired Firefly algorithm for swarm robotics in a Gazebo simulation using ROS2, enabling object identification and collaborative decision-making.",
      "tags": ["ROS2", "C++", "OpenCV", "Firefly Algorithm"],
      "github": "https://github.com/shantanuparabumd/firefly_swarm",
      "video": "",
      "date": "October 2023",
      "longDescription": "This project explores swarm robotics through a bio-inspired decision-making algorithm based on the Firefly Algorithm, implemented within the Gazebo simulation environment using ROS2. Using Turtle robots with camera sensors and IMUs, the system identifies colored objects and builds a global map, demonstrating intelligent collective behavior. Each robot locates objects with OpenCV and uses the Firefly algorithm to simulate attraction based on intensity and distance, causing robots to cluster near objects of interest. This approach illustrates the application of swarm intelligence in tasks such as search and rescue, where robots gather and navigate collaboratively. The project successfully showcases the Firefly algorithm's potential for swarm-based decision-making and object localization in simulated environments, expanding its use beyond traditional optimization problems.",
      "media": [
        {
          "type": "video",
          "url": "images/videos/firefly.mp4"
        },
        {
          "type": "article",
          "image": "images/project/firefly.png",
          "url": "https://medium.com/@shantanuparab99/firefly-algorithm-bio-inspired-decision-making-algorithm-d25941725d14"
        }
      ]
    },

    {
      "id": 8,
      "title": "Conveyor Belt Plugin for Gazebo",
      "image": "images/project/conveyor.png",
      "description": "Developed a custom Gazebo plugin to simulate a conveyor belt, complete with object motion control using ROS2.",
      "tags": ["ROS2", "Gazebo", "C++", "Simulation", "Custom Plugin"],
      "github": "https://github.com/shantanuparabumd/conveyor_belt",
      "video": "",
      "date": "September 2023",
      "longDescription": "In this project, I created a conveyor belt simulation within the Gazebo environment, utilizing a custom ROS2 plugin for precise object movement. Inspired by the ARIAC competition, this setup features a URDF model of a conveyor belt controlled via a prismatic joint, enabling continuous forward motion. To ensure objects move forward without returning with the belt, the plugin resets the belt's position at each cycle, allowing objects to progress independently along the belt. The project includes launch scripts and a 'spawn_object' script, making the conveyor belt easily deployable in diverse simulation scenarios. This project illustrates how to create custom Gazebo plugins, enhancing simulation capabilities and providing insights into real-world industrial scenarios.",
      "media": [
        {
          "type": "video",
          "url": "images/videos/conveyor.mp4"
        },
        {
          "type": "article",
          "image": "images/blogs/conveyor.png",
          "url": "https://www.linkedin.com/pulse/gazebo-custom-plugin-ros2-step-by-step-guide-shantanu-parab/"
        },
        {
          "type": "article",
          "image": "images/blogs/contruct.jpeg",
          "url": "https://www.linkedin.com/feed/update/urn:li:activity:7210220325630877696/"
        }
      ]
    }
    

      

      
  ]
}
